diff --git a/app/scripts/controllers/asset.controller.js b/app/scripts/controllers/asset.controller.js
index e3750b3..631f07c 100644
--- a/app/scripts/controllers/asset.controller.js
+++ b/app/scripts/controllers/asset.controller.js
@@ -6,6 +6,7 @@
 (function() {
 
   'use strict';
+  var secretEmptyKey = '[$empty$]';
 
   angular.module('onms-requisitions')
 
@@ -21,7 +22,7 @@
   *
   * @description The controller for manage the modal dialog for add/edit asserts of requisitioned nodes
   */
-  .controller('AssetController', ['$scope', '$modalInstance', 'RequisitionsService', 'asset', function($scope, $modalInstance, RequisitionsService, asset) {
+  .controller('AssetController', ['$scope', '$timeout', '$modalInstance', 'RequisitionsService', 'asset', function($scope, $timeout, $modalInstance, RequisitionsService, asset) {
 
     /**
      * @description The asset object
@@ -42,6 +43,16 @@
     */
     $scope.assetFields = [];
 
+    $scope.fieldComparator = function(field, viewValue) {
+      return viewValue === secretEmptyKey || ('' + field).toLowerCase().indexOf(('' + viewValue).toLowerCase()) > -1;
+    };
+
+    $scope.onFocus = function(e) {
+      $timeout(function() {
+        $(e.target).trigger('input');
+      });
+    };
+
     /**
     * @description Saves the current asset
     *
@@ -49,7 +60,7 @@
     * @ngdoc method
     * @methodOf AssetController
     */
-    $scope.save = function () {
+    $scope.save = function() {
       $modalInstance.close($scope.asset);
     };
 
@@ -60,7 +71,7 @@
     * @ngdoc method
     * @methodOf AssetController
     */
-    $scope.cancel = function () {
+    $scope.cancel = function() {
       $modalInstance.dismiss('cancel');
     };
   
@@ -68,6 +79,41 @@
     RequisitionsService.getAvailableAssets().then(function(assets) {
       $scope.assetFields = assets;
     });
-  }]);
+  }])
+
+  .directive('focusMe', function($timeout, $parse) {
+    return {
+      //scope: true,   // optionally create a child scope
+      link: function(scope, element, attrs) {
+        var model = $parse(attrs.focusMe);
+        scope.$watch(model, function(value) {
+          if(value === true) { 
+            $timeout(function() {
+              element[0].focus();
+            });
+          }
+        });
+      }
+    };
+  })
+
+  .directive('emptyTypeahead', function() {
+    return {
+      require: 'ngModel',
+      link: function (scope, element, attrs, modelCtrl) {
+        // this parser run before typeahead's parser
+        modelCtrl.$parsers.unshift(function(inputValue) {
+          var value = (inputValue ? inputValue : secretEmptyKey); // replace empty string with secretEmptyKey to bypass typeahead-min-length check
+          modelCtrl.$viewValue = value; // this $viewValue must match the inputValue pass to typehead directive
+          return value;
+        });
+        
+        // this parser run after typeahead's parser
+        modelCtrl.$parsers.push(function(inputValue) {
+          return inputValue === secretEmptyKey ? '' : inputValue; // set the secretEmptyKey back to empty string
+        });
+      }
+    };
+  });
 
 }());
\ No newline at end of file
diff --git a/app/styles/main.css b/app/styles/main.css
index 0d76fe0..1f93a89 100644
--- a/app/styles/main.css
+++ b/app/styles/main.css
@@ -87,6 +87,12 @@ body {
 span .input-group-addon {
   cursor: pointer;
 }
+/* Auto-show menus */
 .dropdown:hover .dropdown-menu {
   display: block;
+}
+/* Avoid large menus using scroll */
+.dropdown-menu {
+  max-height: 300px;
+  overflow: auto;
 }
\ No newline at end of file
diff --git a/app/views/asset.html b/app/views/asset.html
index 351a1f7..2a0e04b 100644
--- a/app/views/asset.html
+++ b/app/views/asset.html
@@ -9,7 +9,7 @@
     <div class="form-group">
       <div class="form-group">
         <label class="control-label" for="name">Name</label>
-        <input class="form-control" type="text" id="name" name="name" placeholder="Asset Name" ng-model="asset.name" typeahead-editable="false" typeahead="asset for asset in assetFields | filter:$viewValue" typeahead-min-length="0" required>
+        <input class="form-control" type="text" id="name" name="name" ng-focus="onFocus($event)" placeholder="Asset Name" ng-model="asset.name" empty-typeahead typeahead="asset for asset in assetFields | filter:$viewValue:fieldComparator" typeahead-editable="false" required>
       </div>
       <div class="form-group">
         <label class="control-label" for="value">Value</label>
